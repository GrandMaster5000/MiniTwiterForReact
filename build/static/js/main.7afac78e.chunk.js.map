{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","styled","div","props","colored","AppHeader","liked","allPosts","as","SearchPanel","onUpdateSearch","e","term","target","value","setState","state","className","type","placeholder","onChange","this","Component","PostStatusFilter","buttons","name","label","map","clazz","filter","onClick","onFilterSelect","PostListItem","onDelete","onToggleLike","onToggleImportant","classNames","important","like","PostList","posts","elems","item","id","itemProps","ListGroup","PostAddForm","onValueChange","text","onSubmit","preventDefault","onAdd","AppBlock","App","deleteItem","data","index","findIndex","elem","slice","addItem","body","newItem","maxId","toggleData","component","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7afac78e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    h1 {\r\n        font-size: 26px;\r\n        color: ${props => props.colored ? 'red' : 'black'};\r\n        :hover {\r\n            color: blue;\r\n        }\r\n    }\r\n    h2 {\r\n        font-size: 1.2rem;\r\n        color: gray;\r\n    }\r\n`\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <Header as='a'>\r\n            <h1>Anatoliy Korobskix</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import AppHeader from \"./app-header\";\r\nexport default AppHeader;","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css'\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n    }\r\n\r\n    onUpdateSearch = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <input \r\n            className=\"form-control search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Поиск по записям\"\r\n            onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import PostStatusFilter from \"./post-status-filter\";\r\nexport default PostStatusFilter;","import React, { Component } from 'react';\r\nimport './post-status-filter.css'\r\n\r\nexport default class PostStatusFilter extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const active = this.props.filter === name,\r\n            clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button \r\n                onClick={()=>this.props.onFilterSelect(name)} \r\n                key={name} \r\n                type=\"button\" \r\n                className={`btn ${clazz}`}>\r\n                    {label}</button>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"btn-group\">\r\n               {buttons}\r\n            </div>\r\n        )\r\n   }\r\n}\r\n\r\n","import PostListItem from \"./post-list-item\";\r\nexport default PostListItem;","import React, { Component } from 'react';\r\nimport './post-list-item.css'\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n\r\n    render() {\r\n        const {label, onDelete, onToggleLike, onToggleImportant, important, like} = this.props;\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        if(important) {\r\n            classNames += ' important';\r\n        }\r\n        if(like) {\r\n            classNames += ' like';\r\n        }\r\n        return (\r\n            <div className={classNames}>\r\n                <span \r\n                className=\"app-list-item-label\"\r\n                onClick={onToggleLike}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button type=\"button\" \r\n                    className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button type=\"button\"\r\n                    className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import PostList from \"./post-list\";\r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item';\r\nimport { ListGroup } from 'reactstrap';\r\nimport './post-list.css'\r\nconst PostList = ({posts, onDelete, onToggleLike, onToggleImportant}) => {\r\n    const elems = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                 <PostListItem {...itemProps}\r\n                 onDelete={() => onDelete(id)}\r\n                 onToggleImportant={() => onToggleImportant(id)}\r\n                 onToggleLike={() => onToggleLike(id)}/>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n            {elems}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from \"./post-add-form\";\r\nexport default PostAddForm;","import React, { Component } from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    onValueChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form \r\n            className=\"bottom-panel d-flex\" \r\n            onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                placeholder=\"О чем вы думаете сейчас?\"\r\n                className=\"form-control new-post-label\"\r\n                onChange={this.onValueChange}\r\n                value={this.state.text}\r\n                 />\r\n                 <button\r\n                 type=\"submit\"\r\n                 className=\"btn btn-outline-secondary\">\r\n                Добавить</button>\r\n    \r\n            </form>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\nimport './app.css';\r\nimport styled from 'styled-components';\r\n\r\nconst AppBlock = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n`\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label: \"Going to learn react\", important: true, like: false, id: 1},\r\n                {label: \"That is so good\", important: false, like: false, id: 2},\r\n                {label: \"I need a break...\", important: false, like: false, id: 3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n\r\n        this.maxId = 3;\r\n    }\r\n\r\n    deleteItem =(id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data : newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem = (body) => {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: ++this.maxId\r\n        };\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleData = (id, component) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, [component]: !old[component]};\r\n\r\n            const newArr =  [...data.slice(0, index),newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.toggleData(id, 'important');\r\n    }\r\n\r\n    onToggleLike = (id) => {\r\n       this.toggleData(id, 'like');\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if(term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    } \r\n    \r\n    onUpdateSearch = (term) => {\r\n        this.setState({term});\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if(filter === 'like') {\r\n            return items.filter(item => item.like);\r\n        } else {\r\n            return items;\r\n        }\r\n    }\r\n\r\n    onFilterSelect = (filter) => {\r\n        this.setState(({filter}));\r\n    }\r\n\r\n   render() {\r\n       const {term, data, filter} = this.state;\r\n       const liked = data.filter(item => item.like).length,\r\n       allPosts = data.length,\r\n       visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <AppBlock>\r\n                <AppHeader\r\n                liked={liked}\r\n                allPosts={allPosts}/>\r\n                <div className='search-panel d-flex'>\r\n                    <SearchPanel\r\n                    onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                    filter={filter}\r\n                    onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                posts={visiblePosts}\r\n                onDelete={this.deleteItem}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleLike={this.onToggleLike}/>\r\n                <PostAddForm\r\n                onAdd={this.addItem}/>\r\n            </AppBlock>\r\n        )\r\n   }\r\n}\r\n\r\n","import App from \"./app\";\r\nexport default App;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/index';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}